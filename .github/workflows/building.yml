# =============================== #
# building.yml                    #
# lottopool's new build workflow  #
# =============================== #

# Define Name
name: Build Pipeline

# Description:
#   This actions workflow was designed to compile our images and upload it to
#   the Github Container Registry.

#
# ===== [ Triggers ] ==========================================================
#

on:
  push:
    tags:
      - "*"

#
# ===== [ Jobs ] ==============================================================
#

jobs:
  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest

    # Set env vars
    env:
      REGISTRY: ghcr.io

    # Define matrix to build both images
    strategy:
      matrix:
        include:
          - image: fsu-sp2023-selab/lp-backend
            dockerfile: ./backend/Dockerfile
            context: ./backend
          - image: fsu-sp2023-selab/lp-frontend
            dockerfile: ./frontend/Dockerfile
            context: ./frontend

    # Establish permissions for GITHUB_TOKEN
    permissions:
      contents: read
      packages: write

    steps:
      # 1.1.) Set up workspace
      - name: Set up workspace
        uses: actions/checkout@v3

      # 1.2) Auth with GHCR
      - name: Authenticate with GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

        # 1.3) Get Metadata
      - name: Format Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.ref_name }}
            type=sha

      # 1.4) Set up Docker build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 1.5) Build and Push
      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
